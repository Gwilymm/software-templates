apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: petclinic-template
  title: Create Petclinic app with SpringBoot connected to Oracle DB using Maven in Azure DevOps with a CI pipeline
  description: Create Petclinic app with SpringBoot connected to Oracle DB using Azure DevOps
  tags:
    - recommended
    - java
    - springboot
    - maven
    - oracle
    - petclinic

spec:
  owner: rhdh
  system: rhdh
  type: service

  parameters:
    - title: Provide Azure DevOps Repository Information
      required:
        - orgName
        - projectName
        - repoName
      properties:
        orgName:
          title: Organization
          type: string
          description: The Organization that this repo will belong to
          default: fraserwalker
          enum:
          - fraserwalker
        projectName:
          title: Project
          type: string
          description: The Project that this repo will belong to
          default: fraserwalker
          enum:
          - fraserwalker
        repoName:
          title: Repository
          type: string
          description: The name of the repository

    - title: Provide Component Information
      required:
        - owner
        - system
        - port
      properties:
        title:
          title: Title
          type: string
          description: The title of the component
        description:
          title: Description
          type: string
          description: Help others understand what this component is for
        owner:
          title: Owner
          type: string
          description: The owner of the component
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
        system:
          title: System
          type: string
          description: The system that the component belongs to
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - System
        port:
          title: Port
          type: number
          default: 8080
          description: Override the port exposed for the application
    
    - title: Provide information about the Deployment
      required:
        - imageRepository
        - namespace
        - imageOrganization
        - imageName
      properties:
        imageRepository:
          title: Image Repository
          type: string
          description: The Image Repository for the Image
          default: quay-5krq5.apps.cluster-5krq5.sandbox1685.opentlc.com
          enum:
          - quay-5krq5.apps.cluster-5krq5.sandbox1685.opentlc.com
        imageOrganization:
          title: Image Organization
          type: string
          description: The Quay Organization or OpenShift Project Name
        imageName:
          title: Image Name
          type: string
          description: The Image Name
        namespace:
          title: Namespace
          type: string
          description: The Namespace for Deploying Resources

  steps:
    - id: templateSource
      name: Generating the Source Code Component
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
        - ./**/*.html
        values:
          # azure devops uses `my-project/my-repo`
          orgName: ${{ parameters.projectName }}
          repoName: ${{ parameters.repoName }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          title: ${{ parameters.title }}
          description: ${{ parameters.description }}
          port: ${{ parameters.port }}
          applicationType: service
          sourceControl: dev.azure.com
          imageOrganization: ${{parameters.imageOrganization}}
          imageName: ${{parameters.imageName}}

    - id: templateCatalog
      name: Generating the Catalog Info Component
      action: fetch:template
      input:
        url: ../../../../skeletons/catalog-info/
        values:
          # azure devops uses `my-project/my-repo`
          orgName: ${{ parameters.projectName }}
          repoName: ${{ parameters.repoName }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          title: ${{ parameters.title }}
          description: ${{ parameters.description }}
          # port: ${{ parameters.port }}
          applicationType: website
          sourceControl: dev.azure.com
          namespace: ${{ parameters.namespace }}

    - id: publishSource
      name: Publishing to the Source Code Repository
      action: publish:azure
      input:
        allowedHosts: ['dev.azure.com']
        description: ${{ parameters.description }}
        repoUrl: dev.azure.com?owner=${{ parameters.projectName }}&repo=${{ parameters.repoName }}&organization=${{ parameters.orgName }}
        defaultBranch: main

    - id: registerSource
      name: Registering the Catalog Info Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publishSource.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

    - id: templateGitops
      name: Generating the Helm Charts
      action: fetch:template
      input:
        url: ../../../../skeletons/helm/
        values:
          image_host: quay-5krq5.apps.cluster-5krq5.sandbox1685.opentlc.com
          image_name: ${{parameters.imageOrganization}}/${{parameters.imageName}}
          image_tag: latest
          chart_name: ${{ parameters.repoName }}
        targetPath: ./gitops/helm/app

    - id: templateArgo
      name: Generating the deployment resources and artefacts
      action: fetch:template
      input:
        url: ../../../../skeletons/argo/
        values:
          repo_url: https://dev.azure.com/${{ parameters.orgName }}/${{ parameters.projectName }}/_git/${{ parameters.repoName }}-gitops
          app_name: ${{ parameters.repoName }}
          namespace: ${{ parameters.namespace }}
        targetPath: ./gitops/argo

    - id: publishGitops
      name: Publishing to Deployment Resource Repository
      action: publish:azure
      input:
        allowedHosts: ['dev.azure.com']
        description: ${{ parameters.description }} GitOps
        repoUrl: dev.azure.com?owner=${{ parameters.projectName }}&repo=${{ parameters.repoName }}-gitops&organization=${{ parameters.orgName }}
        defaultBranch: main
        sourcePath: ./gitops

    - id: createArgoResources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{ parameters.repoName }}
        argoInstance: main
        namespace: janus-argocd
        repoUrl: https://dev.azure.com/${{ parameters.orgName }}/${{ parameters.projectName }}/_git/${{ parameters.repoName }}-gitops
        path: './argo'


  output:
    links:
      - title: Open the Source Code Repository
        url: ${{ steps.publishSource.output.remoteUrl }}
      - title: Open the Catalog Info Component
        icon: catalog
        entityRef: ${{ steps.registerSource.output.entityRef }}